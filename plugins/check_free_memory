#!/bin/bash

script_name=$0

# defaults
warning=150
critical=50

# nagios states
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3

function usage()
{
    echo "Invalid options, usage: ${script_name} -w ${warning} -c ${critical}"
}

while getopts ":w:c:m:" opt; do
    case $opt in
    w)
        warning=$OPTARG
        ;;
    c)
        critical=$OPTARG
        ;;
    m)
        freemb=$OPTARG
        ;;
    \?)
        usage
        exit $STATE_UNKNOWN
        ;;
    :)
        echo "Option -$OPTARG requires an argument."
        exit $STATE_UNKNOWN
        ;;
    esac
done

if [ -z "$freemb" ]; then
    freekbavail=$(cat /proc/meminfo |grep MemAvailable | awk '{ print $2 }')
    if [ -n "$freekbavail" ]; then
        freembavail=$((freekbavail / 1024))
        freekbswap=$(cat /proc/meminfo |grep 'SwapFree' | awk '{ print $2 }')
        freembswap=$((freekbswap / 1024))
        freemb=$((freembavail + freembswap))
    else
        freembbuf=$(free -m | grep buffers/cache | awk '{ print $4 }')
        freembswap=$(free -m | grep Swap | awk '{ print $4 }')
        freemb=$((freembbuf + freembswap))
    fi
fi

MSG="${freemb}MB RAM free (warning=$warning, critical=$critical)"

INT_REGEX='^[0-9]+$'
if ! [[ $freemb =~ $INT_REGEX ]]; then
    echo "UNKNOWN: $MSG"
    exit $STATE_UNKNOWN
fi

if [ "$freemb" -le "$critical" ]; then
    echo "CRITICAL: $MSG"
    exit $STATE_CRITICAL
fi

if [ "$freemb" -le "$warning" ]; then
    echo "WARNING: $MSG"
    exit $STATE_WARNING
fi

echo OK: $MSG
exit $STATE_OK
